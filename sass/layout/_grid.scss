.row {
    /* A diferença entre width e max-width é que o primeiro terá sempre 114rem, não importando
    a resolução da página, enquanto o segundo terá 114rem se a resolução permitir. Caso 
    contrário ajustará o width ao máximo permitido pela resolução vigente. */
    max-width: $grid-width;
    
    /* Centraliza o elemento na página. sintaxe: "margin: TopBot RightLeft;" */
    margin: 0 auto;

    @include clearfix;
    @include responsive(tab-port) { max-width: $grid-width-medium; }
    

    // Aplique pra tudo EXCETO o last-child
    &:not(:last-child) {

        margin-bottom: $gutter-vertical;
        
        @include responsive(tab-port) { margin-bottom: $gutter-vertical-small; }
    }


    /* Seletor CSS de atributos como class, src, alt, etc. O "^" (circunflexo) depois do
    "class" abaixo significa q tudo que COMECE com "col-" deverá ser selecionado. */
    [class^="col-"] {

        float: left;
    
        &:not(:last-child) {

            margin-right: $gutter-horizontal;

            @include responsive(tab-port) { 
            
                margin-right: 0; 
                margin-bottom: $gutter-vertical-small;
            }
        }

        @include responsive(tab-port) { width: 100% !important; }
    }

    .col-1-of-2 {
        width: calc((100% - #{$gutter-horizontal}) / 2 );    
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }
    
    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc(2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }

}


