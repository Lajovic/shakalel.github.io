.card {
    
    /* Não tá ainda mto claro como perspective funciona, mas ele adiciona perspectiva
    ao virar o card. Sem ele o card vira 180 graus flat, sem perspectiva nenhuma.
    Aparentemente qto menor o número de pixels mais espalhafatoso a rotação é. Com uma
    porrada de pixel ela fica bem smooth. */ 
    perspective: 150rem;
    position: relative;    
    height: 50rem;

    &__side {
        
        height: 50rem;
        transition: all .8s ease;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);
        
        /* Absolute position também faz com que o elemento seja apenas do tamanho necessário,
        reduzindo-se, neste caso, ao texto em seu interior. Consertei com o width 100%.
        Outro efeito não intencional gerado foi o colapso do Height e, por algum motivo, a
        propriedade perspective deixa de funcionar. Tive que definir um height pra card.*/
        position:absolute;
        top: 0;
        left: 0;
        width: 100%;
        -webkit-backface-visibility: hidden;
        backface-visibility: hidden;

        /* O border radius pode se perder caso exista uma imagem que ultrapasse
        as suas pontas arredondadas. Pra evitar isso, setamos o overflow como hidden. 
        Ou seja, se algo transbordar é escondido. */
        border-radius: 6px;
        overflow: hidden;

        &--back {
            
            transform: rotateY(180deg);            

            &--1 {
                background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark);
            }

            &--2 {
                background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark);
            }

            &--3 {
                background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark);
            }
        }
    }

    &:hover &__side--front {

        transform: rotateY(-180deg);
    }

    &:hover &__side--back {

        transform: rotateY(0);
    }


    /* FRONT SIDE STYLING FROM HELL */
    &__picture {

        /* Precisamos setar o height aqui para a imagem não se adequar ao conteúdo do div,
        que pode ser muito pequeno. Lembrando que é um background, não uma tag img, entao
        o div não se ajusta a ele e sim ela ao div. */
        height: 23rem;

        background-size: cover;
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);

        /* O clip-path, por alguma razão, nos obriga a setar manualmente os border radius */
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;

        /* Essa propriedade parece muito com os blends do photoshop. */
        background-blend-mode: screen;
        

        &--1 {
            background-image: linear-gradient(to right bottom, $color-secondary-light, $color-secondary-dark), url(../img/nat-5.jpg);
        }

        &--2 {
            background-image: linear-gradient(to right bottom, $color-primary-light, $color-primary-dark), url(../img/nat-6.jpg);
        }

        &--3 {
            background-image: linear-gradient(to right bottom, $color-tertiary-light, $color-tertiary-dark), url(../img/nat-7.jpg);
        }
    }

    &__heading {

        font-size: 2.8rem;
        font-weight: 300;
        text-transform: uppercase;
        text-align: right;
        color: $color-white;
        position: absolute;
        top: 12rem;
        right: 2rem;
        width: 75%;
    }

    &__heading-span {

        padding: 1rem 1.5rem;

        /* Essa propriedade aplica a decoracao inteira para cada linha como se fosse um elemento diferente.
        normalmente não teríamos padding antes da quebra de linha, por exemplo, com isso nós temos. */
        -webkit-box-decoration-break: clone;
        box-decoration-break: clone;


        &--1 {
            
            background-image: linear-gradient(to right bottom, 
                rgba($color-secondary-light, .85), 
                rgba($color-secondary-dark, .85));
            
        }

        &--2 {
            
            background-image: linear-gradient(to right bottom, 
                rgba($color-primary-light, .85), 
                rgba($color-primary-dark, .85));
            
        }

        &--3 {
            
            background-image: linear-gradient(to right bottom, 
                rgba($color-tertiary-light, .85), 
                rgba($color-tertiary-dark, .85));
            
        }
    }

    &__details {

        padding: 3rem;

        ul {

            list-style: none;
            
            /* Utilizei widht de 80% pro underline não riscar a carta de ponta a ponta. */
            /* Margin para centralizar esses 80%. */
            width: 80%;
            margin: 0 auto;            
        
            li {
                text-align: center;
                font-size: 1.5rem;
                padding: 1rem;

                &:not(:last-child) {

                    border-bottom: 1px solid $color-grey-light-2;
                }
            }
        }
    }

    /* BACK SIDE STYLING FROM HELL */
    &__cta {

        @include center_element;
        
        width: 90%;
        text-align: center;
    }

    &__price-box {

        text-align: center;
        color: $color-white;
        margin-bottom: 8rem;

    }

    &__price-only {

        font-size: 1.4rem;
        text-transform: uppercase;
    }

    &__price-value {

        font-size: 6rem;
        font-weight: 100;
    }

    /* A segunda condição dessa media query significa que ela será aplicada quando o browser
    detectar que não há a possibilidade do usuário dar hover, como num ipad, por exemplo. */
    @media only screen and (max-width: $tab-port-w),
           only screen and (hover: none) {
          
        height: auto;        
        border-radius: 3px;
        background-color: $color-white;
        box-shadow: 0 1.5rem 4rem rgba($color-black, .15);

        &__side {
            
            height: auto;
            position: relative;
            box-shadow: none;

            &--back {
                
                transform: rotateY(0);  
                clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);          
            }
        }

        &:hover &__side--front {

            transform: rotateY(0);
        }        

        &__cta {
            
            position: relative;
            top: 0;
            left: 0;
            transform: translate(0);
            width: 100%;
            padding: 7rem 4rem 4rem 4rem;
        }

        &__price-box {

            margin-bottom: 3rem;
        }

        &__price-value {

            font-size: 4rem;
        }

        &__details {

            padding: 1rem 3rem;
        }

    }
}